---
import { t, changeLanguage } from "i18next";
import Layout from "../../layouts/Layout.astro";
import Card from "../../components/Card.astro";
import dataJson from "../../data/calendar.json";
import telegram from "../../assets/telegram.svg";
// import twitter from '../../assets/twitter.svg'
// import instagram from '../../assets/instagram.svg'
import CalendarEntry from "../../components/CalendarEntry.astro";
import { LanguageSelector } from "astro-i18next/components";

changeLanguage("en");

const TELEGRAM_URL = "https://t.me/chatdubaiopenclub";
---

<Layout title={t('site.title')}>
  <LanguageSelector showFlag={true} class="my-select-class" />
  <main>
    <div class='header'>
      <h1><span class='text-gradient'>Dubai Open Club</span></h1>
      <div class='socialContainer'>
        <a class='social' href={TELEGRAM_URL} target='_blank' rel='noreferrer'>
          <img src={telegram} alt='telegram' />
        </a>
        <!-- <a class='social' href={INSTAGRAM_URL} target='_blank' rel='noreferrer'>
					<img src={instagram} alt='instagram' />
				</a> -->
      </div>
    </div>
    <p class='instructions'>
      {t('home.intro.part1')}
      <strong>{t('home.intro.part2')}</strong>!<br />
      {t('home.intro.part3')}
    </p>
    <ul role='list' class='link-card-grid'>
      <Card href='mafia' title={t('home.mafiaCard.title')} body={t('home.mafiaCard.body')} />
      <Card href='cashflow' title={t('home.cashflowCard.title')} body={t('home.cashflowCard.body')} />
      <Card
        disabled={true}
        href='cinemaclub'
        title={t('home.cinemaClubCard.title')}
        body={t('home.cinemaClubCard.body')}
      />
      <Card disabled={true} href='culture' title={t('home.cultureCard.title')} body={t('home.cultureCard.body')} />
    </ul>
    <hr />
    <h2>{t('home.calendarTitle')}</h2>
    {dataJson.filter((x) => Date.now() < new Date(x.date).getTime()).map((event) => <CalendarEntry event={event} />)}
    <h5>{t('home.calendarOld')}</h5>
    {dataJson.filter((x) => Date.now() >= new Date(x.date).getTime()).map((event) => <CalendarEntry event={event} />)}
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1.5rem;
    max-width: 60ch;
  }
  h1 {
    font-size: 3rem;
    font-weight: 800;
    margin: 0;
  }
  .socialContainer {
    display: flex;
    gap: 12px;
  }
  .social {
    background-color: #fff;

    width: 48px;
    height: 48px;
    border: 1px solid black;
    border-radius: 50%;

    display: flex;
    align-items: center;
    justify-content: center;
  }
  .header {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    line-height: 1.6;
    margin: 1rem 0;
    border: 1px solid rgba(var(--accent), 25%);
    background-color: white;
    padding: 1rem;
    border-radius: 0.4rem;
  }
  .instructions code {
    font-size: 0.875em;
    font-weight: bold;
    background: rgba(var(--accent), 12%);
    color: rgb(var(--accent));
    border-radius: 4px;
    padding: 0.3em 0.45em;
  }
  .instructions strong {
    color: rgb(var(--accent));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 1rem;
    padding: 0;
  }
</style>
